資料庫目錄內容說明:

db\MyISAM		L1J日版資料庫
db\InnoDB_TW		L1JTW台版資料庫
db\InnoDB_TW\Custom	L1JTW台版自訂道具資料庫(可於設定檔 database.properties 設定是否讀取)
db\upgrade		各版本升級資料庫(L1J 與 L1JTW)
db\mobskill_test	怪物技能測試資料庫
db\convert_engine_innodb.sql 資料庫引擎轉換為 Innodb
db\convert_engine_myisam.sql 資料庫引擎轉換為 myisam


mobskill 欄位說明

物理攻擊使用以下的欄位 Range～Levarage、Gfxid、ActId
魔法攻擊使用以下的欄位 Levarage、SkillId 
召喚使用以下的欄位 SummonId、SummonMin、SummonMax 

　1.mobid NPC的ID。

　2.actNo 使用技能順序執行的號碼,由0開始每次增加1，不得重複。

　3.mobname 使用技能的NPC名字。

　4.Type 技能的類型 1.物理攻擊，2.魔法攻擊，3.召喚，4.強制變身玩家。

　5.TriRnd 技能發動條件： 隨機機率（1 ～100 ）。

　6.TriHp 技能發動條件： HP% 以下發動（1 ～100 ）。

　7.TriCompanionHp 技能發動條件： 同族的 HP% 以下發動（1 ～100 ）。

　8.TriRange 技能發動條件： triRange 0的情況，和對象的距離 triRange 以上的時候發動。

　9.TriCount 技能發動條件： 技能的發動次數 triCount 以下的時候發動。

　10.Range（物理攻擊使用） 如果到 range 的距離可能做攻擊、物理攻擊的話，即使接近也攻擊的情況設定 1 以上。

　11.AreaWidth（物理攻擊使用）
　　範圍攻擊的寬度：單體攻擊的話設定 0 ，範圍攻擊的話設定 0 以上
　　Width和Height的設定從攻擊者為中心，Width是寬度，Height是高度
　　Width 是指定 1 的話，，目標作為中心到左右 1 成為對象。

　12.AreaHeight（物理攻擊使用） 範圍攻擊的高度：單體攻擊的話設定 0 ，範圍攻擊的話設定 1 以上。

　13.Leverage（魔法攻撃、物理攻撃） 損傷的倍率，1/10表示。物理攻擊，魔法攻擊都有效。

　14.SkillId（魔法攻擊使用） 如果使用魔法，指定skills 資料表的skillId。

　15.Gfxid（物理攻擊使用） 指定物理攻擊的圖片。
　　例：龍的火焰、搖頭擺尾等

　16.ActId（物理攻擊使用） 物理攻擊的圖片ID。
　　例：オーガの薙ぎ払い、スコーピオンの挾み込み攻撃

　17.SummonId（召喚使用） 要召喚的 NPCID。

　18.SummonMin（召喚使用） 召喚 NPC 最少數量。

　19.SummonMax（召喚使用） 召喚 NPC 最大數量。


mobskill 欄位說明

weapon_id	武器編號。
note		註解。
probability	魔法發動機率。
fix_damage	魔法固定傷害。
random_damage	魔法隨機傷害。
skill_id	魔法編號。
skill_time	如果前面skill_id對應的那個魔法的type是1的話,這裡就要設置一個效果持續時間就像衝暈的持續時間。
effect_id	魔法效果所用圖檔。
effect_target	魔法效果所用圖檔 顯示的目標,0=對方身上,1=自己身上。
attr		角色施法動作。


資料庫格式 MyIsam 與 Innodb 之差異簡介(註:Innodb不支援全文檢索):
原始來源 : http://www.student.tw/db/showthread.php?t=174156

MyISAM是比較普通常用的SE(Storage Engine, 接下來簡稱SE), 與其他SE一樣都忽略了FK的限制, 屬於non-transactional safe的SE.
至於InnoDB, 則實做了FK的限制, 包含on update, on delete等restriction. 因此, 建立/設計資料庫的時候, InnoDB是屬於最嚴謹的SE, 
任何違反資料庫原則的設計都會導致錯誤. 因此, InnoDB是唯一被列入Transactional Safe的SE.

此外, 像是我們平常備份資料庫, 若沒有採用InnoDB, 大可直接備份MySQL資料夾底下的data, c/p就可以帶去另外一台MySQL, 
但是InnoDB的SE, 就必須透過phpMyAdmin以類似dump的方式(mysqldump)來輸出資料庫的table and data.
InnoDB這種SE最常的需求在銀行交易系統, 金流系統以及需要不能出錯的資料表(Table)中.
通常都會搭配begin trans, commit, rollback等指令來完成整體的保護.

InnoDB 設定參考(無明顯延遲出現則無需變更):
Windows 修改 my.ini Linux 修改 /etc/my.cnf

較大暫存設定:
[myInnoDB]
set-variable = innodb_buffer_pool_size=1024M
set-variable = innodb_additional_mem_pool_size=10M
innodb_flush_log_at_trx_commit=1
