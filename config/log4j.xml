<?xml version='1.0' encoding='UTF-8' ?>

<!--
  ~ This file is part of L1J-TW <www.XXX.com>.
  ~
  ~ L1J-TW is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ L1J-TW is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with L1J-TW.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration>

    <!-- This appender prints information to console -->
    <appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value=""/>
        </layout>
    </appender>

    <!-- This appender prints all that is shown in console to file -->
    <appender name="CONSOLE_TO_FILE" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/console.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
    </appender>

    <!-- This appender accepts only messages with exceptions and logs them to separate file -->
    <appender name="ERROR_APPENDER" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/errors.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- ClanWareHouseIn 血盟倉庫存放紀錄 -->
    <appender name="ClanWareHouseIn" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/ClanWareHouseIn.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- ClanWareHouseOut 血盟倉庫取出紀錄 -->
    <appender name="ClanWareHouseOut" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/ClanWareHouseOut.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- DeleteCharacter 角色刪除紀錄 -->
    <appender name="DeleteCharacter" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/DeleteCharacter.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- DropItem 道具丟棄紀錄 -->
    <appender name="DropItem" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/DropItem.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- ElfWareHouseIn 妖精倉庫存放紀錄 -->
    <appender name="ElfWareHouseIn" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/ElfWareHouseIn.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- ElfWareHouseOut 妖精倉庫取出紀錄 -->
    <appender name="ElfWareHouseOut" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/ElfWareHouseOut.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- PickUpItem 道具撿取紀錄 -->
    <appender name="PickUpItem" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/PickUpItem.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- PrivateShopBuy 個人商店購買紀錄 -->
    <appender name="PrivateShopBuy" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/PrivateShopBuy.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- PrivateShopSell 個人商店販賣紀錄 -->
    <appender name="PrivateShopSell" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/PrivateShopSell.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- WareHouseIn 個人倉庫存放紀錄 -->
    <appender name="WareHouseIn" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/WareHouseIn.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- WareHouseOut 個人倉庫取出紀錄 -->
    <appender name="WareHouseOut" class="com.l1jtw.commons.log4j.appenders.TruncateToZipFileAppender">
        <param name="file" value="log/WareHouseOut.log"/>
        <param name="append" value="false"/>
        <param name="backupDir" value="log/backup"/>
        <!-- Windows systems doesn't support : char in file names -->
        <param name="backupDateFormat" value="yyyy-MM-dd HH-mm-ss"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p %d{yyyy-MM-dd HH:mm:ss}] %c:%L - %m%n"/>
        </layout>
        <filter class="com.l1jtw.commons.log4j.filters.ThrowablePresentFilter"/>
    </appender>

    <!-- Root Logger -->
    <root>
        <priority value="info"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="CONSOLE_TO_FILE"/>
        <appender-ref ref="ERROR_APPENDER"/>
        <appender-ref ref="ClanWareHouseIn"/>
        <appender-ref ref="ClanWareHouseOut"/>
        <appender-ref ref="DeleteCharacter"/>
        <appender-ref ref="DropItem"/>
        <appender-ref ref="ElfWareHouseIn"/>
        <appender-ref ref="ElfWareHouseOut"/>
        <appender-ref ref="PickUpItem"/>
        <appender-ref ref="PrivateShopBuy"/>
        <appender-ref ref="PrivateShopSell"/>
        <appender-ref ref="WareHouseIn"/>
        <appender-ref ref="WareHouseOut"/>
    </root>

    <!--
        This property represents default LoggerFactory for categories.
        For intance we have class x.y.z.Main that uses it's own name to get logger.

        If we have category or logger x.y.z (or any hierarchy category), then Main will use
        logger factory that is specified by system property "log4j.loggerfactory".

        But if we have exact match of requested logger name and category name, then categoryFactory element
        will be used to create logger.

        For instance, to make Main to use this category factory we should create category called
        x.y.z.Main.




        More examples:

        This example will use LoggerFactory from log4j.loggerfactory
        getLoger("com.l1jtw.commons.log4j.test.Logger")


        This example will use LoggerFactory from categoryFactory element
        getLoger("l1j.server.log4j.test.Logger")
        <category name="com.l1jtw.commons.log4j.test.Logger"/>


        This example will use LoggerFactory from log4j.loggerfactory
        getLoger("l1j.server.log4j.test.Logger")
        <category name="com.l1jtw.commons.log4j.test"/>



        Also, categories can use their own loggers by specifiing logger class.
        <category name="some name" class="com.l1jtw.commons.log4j.MyLoggerInstance"/>

        In such case specified logger class must contain public static method called getLogger(String name)

        Example:
        public static class MyLoggerInstance extends Logger{

                public static MyLoggerInstance getLogger(String name){
                    return new MyLoggerInstance(); // caching with WeakHashMap can be used here     
                }
        }

    -->
    <categoryFactory class="com.l1jtw.commons.log4j.ThrowableAsMessageAwareFactory"/>


</log4j:configuration>